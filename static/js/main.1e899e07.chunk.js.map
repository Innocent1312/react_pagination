{"version":3,"sources":["components/Pagination/Pagination.js","components/Pagination/index.js","App.js","index.js"],"names":["Pagination","_ref","page","totalAmountOfPages","perPage","onPageChange","numberOfPages","i","Math","ceil","push","react_default","a","createElement","Fragment","className","pageNumber","pageClass","setPrevButtonToDisabled","Button","basic","color","size","content","onClick","map","number","key","length","setNextButtonToDisabled","defaultProps","App","state","tabs","title","_this","setState","onAmountOfItemsPerPageChange","event","target","value","_this$state","this","indexOfLastItem","indexOfFirstItem","currentTabs","slice","Header","as","Content","Subheader","onChange","tab","components_Pagination","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1e899e07.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nconst Pagination = ({ page,\n  totalAmountOfPages,\n  perPage,\n  onPageChange }) => {\n  const numberOfPages = [];\n\n  for (let i = 1; i <= Math.ceil(totalAmountOfPages / perPage); i += 1) {\n    numberOfPages.push(i);\n  }\n\n  const setPrevButtonToDisabled = (pageNumber) => {\n    let pageClass = '';\n\n    if (pageNumber <= 1) {\n      pageClass = 'disabled';\n    }\n\n    return pageClass;\n  };\n\n  const setNextButtonToDisabled = (pageNumber) => {\n    let pageClass = '';\n\n    if (pageNumber === numberOfPages.length) {\n      pageClass = 'disabled';\n    }\n\n    return pageClass;\n  };\n\n  return (\n    <>\n      <ul className=\"button-list\">\n        <li className={setPrevButtonToDisabled(page)}>\n          <Button\n            basic\n            color=\"blue\"\n            size=\"mini\"\n            content=\"Previous\"\n            onClick={() => onPageChange(page - 1)}\n          />\n        </li>\n\n        {numberOfPages.map(number => (\n          <li key={number}>\n            <Button\n              basic\n              color=\"yellow\"\n              size=\"mini\"\n              content={number}\n              onClick={() => onPageChange(number)}\n            />\n          </li>\n        ))}\n\n        <li className={setNextButtonToDisabled(page)}>\n          <Button\n            basic\n            color=\"blue\"\n            size=\"mini\"\n            content=\"Next\"\n            onClick={() => onPageChange(page + 1)}\n          />\n        </li>\n      </ul>\n    </>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  totalAmountOfPages: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func,\n};\n\nPagination.defaultProps = {\n  onPageChange: () => {},\n};\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport default Pagination;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport './App.css';\n\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    tabs: [\n      {\n        title: 'Tab 1', content: 'Some text 1',\n      },\n      {\n        title: 'Tab 2', content: 'Some text 2',\n      },\n      {\n        title: 'Tab 3', content: 'Some text 3',\n      },\n      {\n        title: 'Tab 4', content: 'Some text 4',\n      },\n      {\n        title: 'Tab 5', content: 'Some text 5',\n      },\n      {\n        title: 'Tab 6', content: 'Some text 6',\n      },\n      {\n        title: 'Tab 7', content: 'Some text 7',\n      },\n      {\n        title: 'Tab 8', content: 'Some text 8',\n      },\n      {\n        title: 'Tab 9', content: 'Some text 9',\n      },\n      {\n        title: 'Tab 10', content: 'Some text 10',\n      },\n      {\n        title: 'Tab 11', content: 'Some text 11',\n      },\n      {\n        title: 'Tab 12', content: 'Some text 12',\n      },\n      {\n        title: 'Tab 13', content: 'Some text 13',\n      },\n      {\n        title: 'Tab 14', content: 'Some text 14',\n      },\n      {\n        title: 'Tab 15', content: 'Some text 15',\n      },\n      {\n        title: 'Tab 16', content: 'Some text 16',\n      },\n      {\n        title: 'Tab 17', content: 'Some text 17',\n      },\n      {\n        title: 'Tab 18', content: 'Some text 18',\n      },\n      {\n        title: 'Tab 19', content: 'Some text 19',\n      },\n      {\n        title: 'Tab 20', content: 'Some text 20',\n      },\n    ],\n    page: 1,\n    perPage: 5,\n  };\n\n  onPageChange = (page) => {\n    this.setState({\n      page,\n    });\n  };\n\n  onAmountOfItemsPerPageChange = (event) => {\n    this.setState({\n      page: 1,\n      perPage: event.target.value,\n    });\n  };\n\n  render() {\n    const { tabs, page, perPage } = this.state;\n    const indexOfLastItem = page * perPage;\n    const indexOfFirstItem = indexOfLastItem - perPage;\n    const currentTabs = tabs.slice(indexOfFirstItem, indexOfLastItem);\n\n    return (\n      <div className=\"App\">\n        <Header as=\"h2\">\n          <Header.Content>\n            Page number:\n            {page}\n            <Header.Subheader>\n              Items per page: &nbsp;\n\n              <select onChange={this.onAmountOfItemsPerPageChange}>\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"15\">15</option>\n              </select>\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n\n        <table>\n          <tbody>\n            {currentTabs.map(tab => (\n              <tr key={tab.title}>\n                <td>{tab.title}</td>\n                <td>{tab.content}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <Pagination\n          page={page}\n          totalAmountOfPages={tabs.length}\n          perPage={+perPage}\n          onPageChange={this.onPageChange}\n        />\n\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}